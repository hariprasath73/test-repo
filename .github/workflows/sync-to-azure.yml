name: Sync GitHub → Azure DevOps (All Branches, Manual + Push + Scheduled ✅ FINAL-CLEAN)

on:
  workflow_dispatch:  # ✅ Manual trigger from GitHub Actions UI
  push:
    branches:
      - main           # ✅ Auto trigger on pushes to main branch
  schedule:
    - cron: '0 * * * *'  # ✅ Auto-sync every hour (adjust as needed)

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout GitHub Repository (initial checkout)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # ✅ Fetch full history of the triggering branch (main)

    - name: Fetch All GitHub Branches and Create Local Branches Safely (Final Filter)
      run: |
        git fetch origin  # ✅ Fetch all remote branches from GitHub
        echo "Remote branches:"
        git for-each-ref --format='%(refname:short)' refs/remotes/origin/

        # ✅ Safely create local branches from remote branches (skip HEAD, origin/origin, and origin itself)
        for branch in $(git for-each-ref --format='%(refname:short)' refs/remotes/origin/ | grep -v -E '^origin/HEAD$|^origin/origin$|^origin$'); do
          branch_name="${branch#origin/}"
          if git show-ref --quiet refs/heads/"$branch_name"; then
            echo "Branch $branch_name already exists, skipping."
          else
            echo "Creating local branch: $branch_name"
            git branch "$branch_name" "$branch"
          fi
        done

    - name: Set up Git Config
      run: |
        git config --global user.email "sync-bot@yourdomain.com"
        git config --global user.name "GitHub to Azure Sync Bot"

    - name: Clone Azure DevOps Repository
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        AZURE_DEVOPS_ORG: ${{ secrets.AZURE_DEVOPS_ORG }}
        AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
        AZURE_DEVOPS_REPO: ${{ secrets.AZURE_DEVOPS_REPO }}
      run: |
        AZURE_URL="dev.azure.com/$AZURE_DEVOPS_ORG/$AZURE_DEVOPS_PROJECT/_git/$AZURE_DEVOPS_REPO"
        git clone "https://:$AZURE_DEVOPS_PAT@$AZURE_URL" azure_repo.git

        cd azure_repo.git

        echo "Branches found in GitHub repo:"
        git --git-dir=../.git for-each-ref --format='%(refname:short)' refs/heads/

        # ✅ Loop through all local GitHub branches and sync to Azure Repo
        for branch in $(git --git-dir=../.git for-each-ref --format='%(refname:short)' refs/heads/); do
          echo "Syncing GitHub branch: $branch"

          if git show-ref --quiet refs/heads/"$branch"; then
            git checkout "$branch"
          else
            git checkout -b "$branch"
          fi

          git fetch ".." "$branch"
          git merge FETCH_HEAD --allow-unrelated-histories --strategy=recursive --strategy-option=theirs -m "Merge GitHub branch '$branch' into Azure Repo"
          git push origin "$branch"
        done

    - name: Cleanup
      run: rm -rf azure_repo.git
